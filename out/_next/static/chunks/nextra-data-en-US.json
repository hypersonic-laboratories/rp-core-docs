{"/advanced":{"title":"Advanced","data":{"":"This is the index page for the Advanced folder!"}},"/about":{"title":"About","data":{"":"This is the about page! This page is shown on the navbar."}},"/advanced/satori":{"title":"Satori","data":{"":"Satori (悟り) is a Japanese Buddhist term for awakening, \"comprehension; understanding\"."}},"/hud-class/client":{"title":"HUD Management","data":{"":"HUD Management module, used as an abstraction layer with additional features to make HUD management easier.\nvariable\ttype\toptional\tlocation\tVector\ttrue","methods#Methods":"","destroy#Destroy()":"Destroys the HUD, note that if you use this you'll need to recreate the HUD if you want to use it again.\n    hud.Destroy()","hide#Hide()":"Hides the HUD, note that if you want an event to be triggered you have to set the closeEvent param.\n    hud.Hide()","subscribeevent-callback#Subscribe(event, callback)":"Subscribe to an event from the UI side.\nvariable\ttype\toptional\tevent\tString\tfalse\tcallback\tFunction\tfalse\t\n    hud.Subscribe('boughtItem', function(data)\r\n        -- Event logic here\r\n    end)","callevent-args#Call(event, args?...)":"Call to an event from the LUA side to the JS side.\nvariable\ttype\toptional\tevent\tString\tfalse\targs\tAny\ttrue\t\n    hud.Call('openUI', 'foo', 'bar')","focusenablemouse-enableinput#Focus(enableMouse, enableInput)":"Sets focus for the UI.\nvariable\ttype\toptional\tenableMouse\tBoolean\tfalse\tenableInput\tBoolean\tfalse\t\n    hud.Focus(true, true)","subscribecallbackevent-callback#SubscribeCallback(event, callback)":"Subscribes a callback to the UI side.\nvariable\ttype\toptional\tevent\tString\tfalse\tcallback\tString\tfalse\t\n    hud.SubscribeCallback('checkForItem', function(data, cb)\r\n        local item = data.item\r\n\r\n        Core.TriggerCallback('eventToCheckForItemCount', function(hasItem)\r\n            cb(hasItem)\r\n        end, item)\r\n    end)"}},"/":{"title":"Introduction","data":{"":"Welcome to Nextra! This is a basic docs template. You can use it as a starting point for your own project :)","what-is-nextra#What is Nextra?":"A simple, powerful and flexible site generation framework with everything you love from Next.js.","documentation#Documentation":"The documentation is available at https://nextra.site."}},"/player-class/server":{"title":"Server","data":{"":"Player Class with functions used to assist","methods#Methods":"","revivelocation#revive(location?)":"Revives the player, if location is given it will revive them at the coordinates\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.revive()","slay#slay()":"Slays the player, instantly killing them on the spot\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.slay()","save-#save ()":"Saves the players savable data to the database.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.slay()","getxp#getXP()":"Returns the players current XP level.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal xp = xPlayer.getXP()","getinventorytarget#getInventoryTarget()":"Returns the players current inventory target.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal inventoryTarget = xPlayer.getInventoryTarget()","getvehicle#getVehicle()":"Returns the vehicle the player is currently in, if none it will return nil.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal vehicle = xPlayer.getVehicle()","getkey#get(key)":"Returns a stored key value on the player class, this can be used for dynamic variables.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.set('foo', 'bar')\r\n\r\nlocal x = xPlayer.get('foo') -- x = 'bar'","getid#getID()":"Returns the players session ID.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal x = xPlayer.getID()","getname#getName()":"Returns the players' roleplay name.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal x = xPlayer.getName()","getidentifier#getIdentifier()":"Returns the players' unqiue account identifier.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal x = xPlayer.getIdentifier()","getmoney#getMoney()":"Returns the players' cash money balance.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal x = xPlayer.getMoney()","getbank#getBank()":"Returns the players' bank balance.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal x = xPlayer.getBank()","getaccountaccount#getAccount(account)":"Returns the players' target account.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal x = xPlayer.getAccount('money')","getstatstat#getStat(stat)":"Returns the players' target stat (eg, hunger, thirst, stress).\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal x = xPlayer.getStat('hunger')","getskin#getSkin()":"Returns the players' skin.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal x = xPlayer.getSkin()","getcharid#getCharId()":"Returns the players' current characters unique identifier.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal x = xPlayer.getCharId()","setjobjob#setJob(job)":"Sets the players' current job.\nlocal xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.setJob({ name = 'police', grade = 0 })","setkey-value#set(key, value)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.set('foo', 'bar')","setnamevalue#setName(value)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.setName('Billy Bob')","addmoneyvalue#addMoney(value)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.addMoney(5000)","removemoneyvalue#removeMoney(value)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.removeMoney(5000)","addbankmoneyvalue#addBankMoney(value)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.addBankMoney(5000)","removebankmoneyvalue#removeBankMoney(value)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.removeBankMoney(5000)","addaccountmoneyaccount-value#addAccountMoney(account, value)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.addAccountMoney(\"bank\", 5000)","removeaccountmoneyaccount-value#removeAccountMoney(account, value)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.removeAccountMoney(\"bank\", 5000)","setaccountaccount-table#setAccount(account, table)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.setAccount(\"bank\", { ... })","setstatstat-value#setStat(stat, value)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.setStat(\"stress\", 50)","setskintable#setSkin(table)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nlocal new_skin = xPlayer.getSkin()\r\n\r\nxPlayer.setSkin(new_skin)","shownotification#showNotification()":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.showNotification(new_skin)","kickreason#kick(reason)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.kick(\"Stinky player found!\")","updatedata#updateData()":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.updateData()","additemitem-count-metadata-slot#addItem(item, count, metadata?, slot?)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.addItem('bread', 1)","removeitemitem-count-metadata-slot#removeItem(item, count, metadata?, slot?)":"local xPlayer = Core.GetPlayerFromId(player:GetID())\r\n\r\nxPlayer.removeItem('bread', 1)","attributes#Attributes":""}},"/another":{"title":"Another Page","data":{"":"let a = 1;\r\n\r\nconsole.log(a);","component#Component":"","external-component#External Component":""}}}